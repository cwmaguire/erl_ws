Erlang Cowboy Webserver Experiment

Multiple concurrent Erlang processes send shape objects to a web page
through a Cowboy Websocket. The processes use a heat map to track where they
and other processes are currently drawing themselves. The heat map dissapates
over time to encourage the processes not to try and go backwards. Unfortunately
this allows them to get trapped in corners by other processes. Needs tuning.

When I started this I went through the Cowboy user's guide and implemented
a bunch of features. I've left these features implemented for now but I'll
probably move them to their own repo as the "boids" portion of this app grows.

Features:
- gen_server process per Websocket handler using simple_one_for_one
  supervisor child spec
- concurrent drawing processes
- Server graphic object buffering
- Process influence "heat map"

Implemented Cowboy features for reference:
- Form POST handling
- Form GET handling
- Reading request body
- Host [...] binding
- Path [...] binding
- Various cowboy_req functions
- Static files
- Static file directory
- Path constraints - int
- Path constraints - boolean
- Path constraints - updated value
- Optional path bindings
- Reading request body in chunks
- Sending response in chunks
- Websocket (server handler and web page)
