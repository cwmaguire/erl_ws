Erlang Cowboy Webserver Experiment

I want to play with autonomous graphical elements like boids and such,
but I don't want to do all the code in JavaScript.  Instead I want to do
all the logic in Erlang and connect JavaScript to Erlang via the Cowboy
Erlang webserver.

I have multiple concurrent processes sending drawing instructions through a
Websocket to a webpage. They only draw randomly coloured squares for now.
Next step is probably animating multiple objects.

This experiment also serves as a reference application showing how different
Cowboy features work:
- Form POST handling
- Form GET handling
- Reading request body
- Host [...] binding
- Path [...] binding
- Various cowboy_req functions
- Static files
- Static file directory
- Path constraints - int
- Path constraints - boolean
- Path constraints - updated value
- Optional path bindings
- Reading request body in chunks
- Sending response in chunks
- Websocket (server handler and web page)

Other features:
- gen_server process per Websocket handler using simple_one_for_one
  supervisor child spec
- concurrent drawing processes
