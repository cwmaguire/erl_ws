Erlang Cowboy Webserver Experiment

Multiple concurrent Erlang processes send shape objects to a web page
through a Cowboy Websocket.

My goal is to play with autonomous entities that move around by sending
drawing commands to the screen and communicating to each other where they
are. Erlang rocks at concurrency and I like the language and environment
better than JavaScript.

This also serves (for now) as a reference application showing how different
Cowboy features work:
- Form POST handling
- Form GET handling
- Reading request body
- Host [...] binding
- Path [...] binding
- Various cowboy_req functions
- Static files
- Static file directory
- Path constraints - int
- Path constraints - boolean
- Path constraints - updated value
- Optional path bindings
- Reading request body in chunks
- Sending response in chunks
- Websocket (server handler and web page)

Other features:
- gen_server process per Websocket handler using simple_one_for_one
  supervisor child spec
- concurrent drawing processes
